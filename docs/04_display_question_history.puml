@startuml 04_display_question_history

note as note_main
  背景がピンク：新規に作成したクラス
  背景がオレンジ：修正したクラス
end note

class Main #Orange {
  + {static} main()
  - {static} TypingGameDifficulty displayInputDifficulty()
  - {static} void displayCountDown()
  - {static} void displayResult(TypingGame typingGame)
  - {static} void displayRanking(TypingGameHistory typingGameHistory, TypingGameDifficulty difficulty)
  - {static} boolean displayInputRetry()
  - {static} static int getInputInt(int defaultValue)
}

class TypingGame #Orange {
  - TypingGameDifficulty difficulty
  - List<Question> questions
  - List<QuestionResult> results
  - ZonedDateTime startTime
  - ZonedDateTime endTime
  - Question prevQuestion
  + TypingGame(TypingGameDifficulty difficulty, List<Question> questions)
  + void execute()
  + List<QuestionResult> getResults()
  + long getTimeToCalculate()
  + boolean isSameDifficulty(TypingGameDifficulty difficulty)
  + int getNumberOfQuestions()
  - Question getNextQuestion()
  - String toString()
}

enum TypingGameDifficulty {
  + EASY
  + NORMAL
  + HARD
  ..
  - String name
  - int level
  - boolean defaultLevel
  __
  + TypingGameDifficulty(String name, int level, boolean defaultLevel)
  + {static} TypingGameDifficulty of(int level)
  + {static} TypingGameDifficulty getDefault()
  + String getName()
  + int getLevel()
  + boolean lessThan(TypingGameDifficulty difficulty)
}

class TypingGameHistory {
  - List<TypingGame> typingGames
  + void add(TypingGame typingGame)
  + List<TypingGame> sortedTypingGames(TypingGameDifficulty difficulty)
  - List<TypingGame> getTypingGames(TypingGameDifficulty difficulty)
}

class TypingGameFactory {
  + {static} TypingGame generate(TypingGameDifficulty difficulty)
}

class Question {
  - String word
  - TypingGameDifficulty difficulty
  + Question(String word, TypingGameDifficulty difficulty)
  + String getWord()
}

class QuestionResult #Pink {
  - Question question
  - String answer
  - boolean judge
  + QuestionResult(Question question, String answer, boolean judge)
  + Question getQuestion()
  + String getAnswer()
  + boolean isJudge()
}

class QuestionFactory {
  + static List<Question> generate(TypingGameDifficulty difficulty)
  - static List<Question> generate()
}

class StandardInputReader {}

Main -- TypingGameFactory : use >
Main -- StandardInputReader : use >

TypingGameFactory -- QuestionFactory : use >

TypingGameFactory -- TypingGame : generate >

QuestionFactory -- Question : generate >

TypingGameHistory --> TypingGame
TypingGame --> TypingGameDifficulty
TypingGame --> Question
TypingGame --> QuestionResult
TypingGame -- StandardInputReader : use >

@enduml
